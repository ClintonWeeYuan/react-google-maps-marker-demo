import { useQuery } from "@tanstack/react-query";
import type { NextPage } from "next";
import Head from "next/head";
import { useCallback, useState } from "react";
import Card from "../components/Card";
import GoogleMap from "../components/GoogleMap";
import dummyData from "../services/fetchHealthProviders/dummyData";
import {HealthProvider} from "../services/fetchHealthProviders/types";



const Home: NextPage = () => {
  const data = dummyData;

  const [center, setCenter] = useState<google.maps.LatLngLiteral>({
    lat: 51.540447,
    lng: -0.148366,
  });

  const [zoom, setZoom] = useState<number>(15);

  const onIdle = (map: google.maps.Map) => {
    setZoom(map.getZoom()!);

    const nextCenter = map.getCenter();

    if (nextCenter) {
      setCenter(nextCenter.toJSON());
    }
  };

  // const [highlightedHotel, setHighlightedHotel] = useState<Hotel | null>(null);
  const [highlightedHealthProvider, setHighlightedHealthProvider] = useState<HealthProvider | null>(null);

  // const onMarkerClick = useCallback(
  //   (payload: Hotel) => {
  //     if (highlightedHotel === payload) {
  //       setHighlightedHotel(null);
  //     } else {
  //       setHighlightedHotel(payload);
  //     }
  //   },
  //   [highlightedHotel]
  // );
  const onMarkerClick = useCallback(
    (payload: HealthProvider) => {
      if (highlightedHealthProvider === payload) {
        setHighlightedHealthProvider(null);
      } else {
        setHighlightedHealthProvider(payload);
      }
    },
    [highlightedHealthProvider]
  );

  return (
    <div>
      <Head>
        <title>Google Maps Marker Demo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className="h-screen relative">
          <GoogleMap
            apiKey={process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY!}
            center={center}
            zoom={zoom}
            markers={data.healthProviders}
            onIdle={onIdle}
            onMarkerClick={onMarkerClick}
            highlightedMarkerId={highlightedHealthProvider?.id}
          />
        </div>
        <div>
          {highlightedHealthProvider && (
            <Card
              name={`${highlightedHealthProvider.consultant.firstName} ${highlightedHealthProvider.consultant.lastName}` }
              address={`${highlightedHealthProvider.institution}`}
              maxFee={highlightedHealthProvider.fees.max}
              minFee={highlightedHealthProvider.fees.min}
            />
          )}
        </div>
      </main>
    </div>
  );
};

export default Home;
